{"version":3,"sources":["../src/alertmanager_ctrl.js"],"names":["MetricsPanelCtrl","_","coreModule","kbn","moment","panelDefaults","colors","crit","warn","ok","AlertmanagerPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","defaultsDeep","panel","filter","displayFormats","displayDetails","displayBool","events","on","onRender","bind","onDataReceived","onInitEditMode","dataList","data","rows","render","addEditorTab","unitFormats","getUnitFormats","alerts","length","silences","firing","i","alert_state","handleDisplay","handleColoring","$panelContainer","css","displayFormat","displayMessage","message","customMessage","scope","elem","attrs","ctrl","find","addClass","$panelContoller","templateUrl"],"mappings":"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","file":"alertmanager_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport _ from \"lodash\";\nimport coreModule from \"app/core/core_module\";\nimport kbn from \"app/core/utils/kbn\";\nimport moment from \"moment\";\n\nimport './css/alertmanager_panel.css!';\n\n// Set and populatre panel defaults\nconst panelDefaults = {\n\tcolors: {\n\t\tcrit: 'rgba(245, 54, 54, 0.9)',\n\t\twarn: 'rgba(237, 129, 40, 0.9)',\n\t\tok: 'rgba(50, 128, 45, 0.9)'\n\t}\n}\n\nexport class AlertmanagerPluginCtrl extends MetricsPanelCtrl {\n\t/** @ngInject */\n\tconstructor($scope, $injector, $log, $filter, annotationsSrv) {\n\t\tsuper($scope, $injector);\n\t\t_.defaultsDeep(this.panel, panelDefaults);\n\n\t\tthis.filter = $filter;\n\n\t\tthis.displayFormats = ['Details', 'OK / KO', 'Custom message'];\n\t\tthis.displayDetails = false\n\t\tthis.displayBool = true\n\n\t\tthis.events.on('render', this.onRender.bind(this));\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\t}\n\n\tonDataReceived(dataList) {\n\t\tthis.data = dataList[0].rows;\n\t\tthis.render();\n\t}\n\n\tonInitEditMode() {\n\t\tthis.addEditorTab('Options', 'public/plugins/camptocamp-alertmanager-panel/editor.html', 2);\n\t\t// Load in the supported units-of-measure formats so they can be displayed in the editor\n\t\tthis.unitFormats = kbn.getUnitFormats();\n\t}\n\n\tonRender() {\n\t\tvar alerts = this.data.length;\n\t\tvar silences = 0;\n\t\tvar firing = 0;\n\n\t\tfor(var i=0;i<alerts;i++) {\n\t\t\tvar alert_state = this.data[i][this.data[i].length - 2];\n\t\t\tif (alert_state == \"active\") {\n\t\t\t\tfiring++;\n\t\t\t} else {\n\t\t\t\tsilences++;\n\t\t\t}\n\t\t}\n\n\t\tthis.handleDisplay(alerts, silences, firing);\n\n\t\tthis.handleColoring(alerts, silences, firing);\n\t}\n\n\thandleColoring(alerts, silences, firing) {\n\t\tif (alerts == 0) {\n\t\t\tthis.$panelContainer.css('background-color', this.panel.colors.ok);\n\t\t} else if (silences > 0 && firing == 0) {\n\t\t\tthis.$panelContainer.css('background-color', this.panel.colors.warn);\n\t\t} else {\n\t\t\tthis.$panelContainer.css('background-color', this.panel.colors.crit);\n\t\t}\n\t}\n\n\thandleDisplay(alerts, silences, firing) {\n\t\tif (this.panel.displayFormat == \"Details\") {\n\t\t\tthis.displayMessage = false;\n\t\t\tthis.silences = silences;\n\t\t\tthis.firing = firing;\n\t\t} else if (this.panel.displayFormat == \"OK / KO\") {\n\t\t\tthis.displayMessage = true;\n\t\t\tif (firing == 0) {\n\t\t\t\tthis.message = \"OK\";\n\t\t\t} else {\n\t\t\t\tthis.message = \"KO\";\n\t\t\t}\n\t\t} else if (this.panel.displayFormat == \"Custom message\") {\n\t\t\tthis.displayMessage = true;\n\t\t\tthis.message = this.filter('interpolateTemplateVars')(this.panel.customMessage, this.$scope);\n\t\t}\n\t}\n\n\t// Get panel from Grafana\n\tlink(scope, elem, attrs, ctrl) {\n\t\tthis.$panelContainer = elem.find('.panel-container');\n\t\tthis.$panelContainer.addClass(\"st-card\");\n\t\tthis.$panelContoller = ctrl;\n\t}\n}\nAlertmanagerPluginCtrl.templateUrl = 'module.html';\n"]}